/======================================================***设计模式***============================================/


/=====================================================***六大设计原则***===========================================/

一、单一职责原则(Single Responsibility Principle,SRP)

   1、定义

        SRP：There should never be more than one reason for a class to change.
        单一职责原则的定义是:应该有且仅有一个原因引起类的变更。

        注意:单一职责原则提出了一个编写程序的标准，用“职责”或“变化原因”来衡量接口或类设计得是否优良，
        但是“职责”和“变化原因”都是不可度量的，因项目而异，因环境而异

    2、SRP优点：
        单一职责原则有什么好处：
        ● 类的复杂性降低，实现什么职责都有清晰明确的定义；
        ● 可读性提高，复杂性降低，那当然可读性提高了；
        ● 可维护性提高，可读性提高，那当然更容易维护了；
        ● 变更引起的风险降低，变更是必不可少的，如果接口的单一职责做得好，一个接口修改只对相应的实现类有影响，
            对其他的接口无影响，这对系统的扩展性、维护性都有非常大的帮助。


二、里斯替换原则

三、依赖倒置原则

四、接口隔离原则

五、迪米特原则

六、开闭原则

